---
layout:  default
navname: Download
sidenav:
  - head: Download
  - text: Obtaining the Software
    href: download.html
  - text: Third Party Resources
    href: third-party.html
  - text: Starting with git
    href: use-git.html
    active: true
---

> Some of this information may not be up to date.

### Starting with git

Go to a clean starting place (eg, your home directory):

        $ cd $HOME

Clone the repository without checking out anything just yet and we'll also
specify 'github' as the name of the remote repository that we'll be tracking:

        $ git clone --no-checkout --origin github http://github.com/olesenm/xml-qstat.git

We now change to the newly created directory:

        $ cd xml-qstat/

Since we haven't checked out any files, the only thing in the directory
will be the **.git/** hidden directory:

        $ ls -a
        ./  ../  .git/

Listing all of the git branches should look like this
(\* indicates the currently active branch):

        $ git branch -l -a
        * master
          github/HEAD
          github/master
          github/gh-pages

Now we are ready to start our own branch, which we'll
setup **without tracking** the remote branch.
_This is an important point._
By creating a non-tracked branch, we can avoid worrying about clobbering any
of our custom settings with future updates.

        $ git checkout --no-track -b site github/master

For general cleanliness, we'll also remove the tracked branch *master*,
but it can always be reinstated later if desired:

        $ git branch -d master
        Deleted branch master.

We can now check that everything is as it should be:

        $ git status
        # On branch site
        nothing to commit (working directory clean)

Since we are on our own branch (*site*), we can make changes
independent of the upstream branches (*github/master*).

The first thing we'll do is adjust the paths to suit our installation.
Depending upon your final configuration, you may not need to adjust all
of the following files:

        make-xmlqstat-jar.sh
        init-scripts/cocoon
        init-scripts/httpi
        init-scripts/xmlqstat-cacher
        scripts/jobinfo
        scripts/xmlqstat-cacher.pl

You should also adjust the **xmlqstat/config/config.xml** to
reflect your site (perhaps with your own logo image).
If you are using the FlexLM integration (qlicserver), you should also
symlink the cache directories at this time under
**xmlqstat/cache-{clusterName}**.

To preserve these initial editing changes thus far,
some of the following commands will be useful.

<dl style="margin-left: 2em">
  <dt>git status</dt>

  <dd>check the current of things</dd>
  <dt>git add -u</dt>
  <dd>stage updated files for the next commit</dd>
  <dt>git add file1 .. fileN</dt>
  <dd>stage new files for the next commit</dd>
  <dt>git commit</dt>

  <dd>commit the changes</dd>
  <dt>git commit --amend</dt>
  <dd>amend to the previous commit</dd>
  <dt>git log</dt>
  <dd>view the commit log</dd>
</dl>

At any time we can also fetch the newest version, without affecting our
working directory whatsoever:
<dl style="margin-left: 2em">
  <dt>git fetch github</dt>
  <dd>fetch the lastest version</dd>
  <dt>git log --stat --no-merges github/master ^HEAD</dt>
  <dd>view the changes in github/master but not in our branch</dd>
</dl>

Provided that our working directory is clean (no uncommitted changes), we
can merge in any upstream changes:

        $ git merge github/master

This normally merges without problems, except when you have changed exactly
the same lines as have been changed in the *github/master*. You'll need to
resolve such conflicts by hand (git can't really tell who should be right in
this situation) and commit the finally resolved versions.

