---
layout:  default
navname: Install
sidenav:
  - head: Installation
  - text: Package Overview
    href: package-overview.html
  - text: General
    href: install.html
  - text: HTTPi
    href: install-httpi.html
  - text: Cocoon
    href: install-cocoon.html
  - text: Advanced
    href: install-advanced.html
    active: true
---

### Advanced Installation: Alternative Web-App Name

Although throughout the installation instructions reference is made to
**/xmlqstat/** as the rendering path for the **web-app/**, it is indeed
possible to use other names. For *cocoon*, only the *mount-table.xml* needs
to be changed and *cocoon* restarted. For the **HTTPi-xmlqstat** server, the
configuration script should be rerun with the new value -- unless you feel
confident editing the server.

### Advanced Installation: Cocoon or HTTPi behind Apache Proxies

Many Unix servers already have an Apache webserver running on the system. If
you have administrative access to this server, you can proxy the
**xml-qstat** application server behind Apache. The primary benefit is
removing the browser requirement to connect to TCP port 8080 or 8888. The
URL changes (for example) from http://{host}:8888/xmlqstat/ to
http://{host}/xmlqstat/. This also allows firewall administrators to seal
port 8888 closed against all connections not coming from the Apache server.

For the proxying to work, we need both `mod_proxy` and `proxy_http`. On some
systems you can query what is configured with the `a2enmod -l` command and
if necessary, load them (NB: the load order is important):

        $ a2enmod mod_proxy
        $ a2enmod proxy_http

On other systems you may need the `LoadModule` directive in your apache
configuration.

The Apache configuration directives for enabling the proxy:

        <IfModule mod_proxy.c>
            # proxy connections to port 8888 forward and reverse...
            ProxyPass  /xmlqstat  http://127.0.0.1:8888/xmlqstat
            ProxyPassReverse  /xmlqstat  http://127.0.0.1:8888/xmlqstat
        </IfModule>

And finally restart or reload Apache. For example,

        $ rcapache2 reload

